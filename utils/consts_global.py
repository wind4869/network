# -*- coding: utf-8 -*-

# Root directory of whole project
ROOT_DIR = '/Users/wind/workspace/network/'

# ================== FOR APKs & APPs & TOOLs ====================

# APK download url and cmd
APK_PATH = ROOT_DIR + 'apks/%s.apk'
DOWNLOAD_URL = 'http://apps.wandoujia.com/apps/%s/download'
DOWNLOAD_CMD = 'curl -C - -L -o %s %s' % (APK_PATH, DOWNLOAD_URL)

# APP attributes

STRING_ATTRS = [
    'packageName',
    'title',
    'description',
    'editorComment',
    'changelog',
]

INTEGER_ATTRS = [
    'downloadCount',
    'likesRate',
    'likesCount',
    'dislikesCount',
    'commentsCount',
    'installedCount',
]

SPECIAL_ATTRS = [
    'categories.*.name',
    'tags.*',
    'apks.permissions',
]

OPT_FIELDS = ','.join(STRING_ATTRS + INTEGER_ATTRS + SPECIAL_ATTRS)
DETAILS_URL = 'http://apps.wandoujia.com/api/v1/apps/%s?opt_fields=' + OPT_FIELDS

# Path of Jar, xml, intent and filter files
APP_DIR = ROOT_DIR + 'apps/%s/'
JAR_PATH = APP_DIR + 'classes.jar'
XML_PATH = APP_DIR + 'AndroidManifest.xml'
INTENT_PATH = APP_DIR + 'intents.txt'
INTENT_FILTER_PATH = APP_DIR + 'intent-filters.txt'

# Tools for apk analysis
TOOL_DIR = ROOT_DIR + 'tools/'
APK_PARSER = TOOL_DIR + 'APKParser.jar'
DEX_TO_JAR = TOOL_DIR + 'dex2jar/d2j-dex2jar.sh'

# CMDs for apk analysis
XML_CMD = 'java -jar %s "%s" > "%s"' % \
          (APK_PARSER, APK_PATH, XML_PATH)
D2J_CMD = '%s "%s" -o "%s" --force' % \
          (DEX_TO_JAR, APK_PATH, JAR_PATH)

# ==================== FOR FILES ===============================

# Files to be used
FILE_DIR = ROOT_DIR + 'files/'

# Dicts for IO tag matching
MENDDICT_TXT = FILE_DIR + 'menddict.txt'
NOUNDICT_TXT = FILE_DIR + 'noundict.txt'
VERBDICT_TXT = FILE_DIR + 'verbdict.txt'

# Dict for ref matching
APPDICT_TXT = FILE_DIR + 'appdict.txt'

# Dicts for nat matching
PERMDICT_TXT = FILE_DIR + 'permdict.txt'
NATDICT_TXT = FILE_DIR + 'natdict.txt'
APPMAP_TXT = FILE_DIR + 'appmap.txt'

# App and category lists
APPLIST_TXT = FILE_DIR + 'applist.txt'
CATELIST_TXT = FILE_DIR + 'catelist.txt'

# User usages dataset from frappe:
# http://baltrunas.info/research-menu/frappe
USAGES_CSV = FILE_DIR + 'usages.csv'
APPMETA_CSV = FILE_DIR + 'appmeta.csv'

NUM_RECORDS = 96203

USG_ATTRS = [
    'user',
    'item',
    'cnt',
    'daytime',
    'weekday',
    'isweekend',
    'homework',
    'cost',
    'weather',
    'country',
    'city',
]

# Users(139) that have more than 10000 records
# and Apps(1506) can be found in wandoujia
USG_USRS = [1, 2, 4, 7, 10, 12, 13, 14, 15, 16, 18, 22, 23, 25, 26, 29, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 59, 60, 64, 66, 70, 71, 75, 77, 78, 80, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 106, 108, 110, 113, 117, 120, 126, 127, 128, 130, 131, 133, 134, 138, 140, 142, 143, 144, 148, 150, 153, 154, 157, 159, 163, 164, 165, 166, 167, 168, 170, 172, 175, 176, 177, 179, 180, 181, 184, 186, 187, 195, 199, 200, 212, 213, 215, 218, 223, 230, 239, 243, 246, 248, 252, 254, 257, 260, 262, 271, 272, 273, 282, 289, 291, 292, 293, 295, 296, 302, 308, 340, 343, 358, 359, 363, 377, 389, 414, 428, 476]
USG_APPS = [0, 1, 2, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 119, 120, 122, 124, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 155, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 181, 183, 185, 186, 187, 188, 192, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 220, 221, 223, 224, 227, 229, 231, 232, 233, 234, 237, 238, 239, 242, 243, 244, 246, 249, 251, 254, 255, 256, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 295, 296, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 329, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 362, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 397, 400, 402, 404, 405, 407, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 423, 424, 429, 431, 433, 435, 436, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 453, 456, 459, 464, 465, 466, 467, 469, 471, 474, 475, 476, 477, 478, 480, 482, 485, 487, 489, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 519, 522, 523, 526, 531, 532, 534, 536, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 570, 571, 572, 573, 575, 576, 578, 581, 582, 584, 586, 587, 591, 592, 597, 598, 600, 603, 607, 608, 609, 610, 612, 615, 616, 623, 627, 629, 631, 632, 635, 637, 639, 641, 643, 644, 649, 650, 655, 657, 658, 665, 666, 667, 668, 671, 674, 675, 677, 678, 679, 680, 683, 686, 690, 691, 692, 693, 694, 699, 703, 707, 709, 711, 713, 714, 719, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 735, 737, 739, 740, 742, 746, 748, 751, 752, 755, 756, 757, 766, 767, 773, 774, 777, 779, 780, 781, 782, 783, 784, 786, 788, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 807, 809, 810, 820, 825, 826, 829, 831, 832, 834, 836, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 867, 868, 872, 875, 878, 889, 890, 894, 898, 900, 902, 903, 906, 907, 908, 911, 912, 915, 916, 917, 918, 919, 921, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 945, 946, 947, 949, 950, 953, 956, 958, 959, 961, 964, 965, 967, 969, 973, 976, 979, 980, 982, 984, 988, 989, 990, 996, 998, 1001, 1003, 1004, 1007, 1014, 1015, 1017, 1018, 1019, 1024, 1026, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1049, 1051, 1052, 1054, 1055, 1059, 1060, 1061, 1063, 1065, 1066, 1068, 1069, 1072, 1073, 1074, 1075, 1077, 1081, 1082, 1084, 1085, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1098, 1099, 1100, 1101, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1131, 1134, 1141, 1142, 1150, 1153, 1155, 1157, 1158, 1159, 1160, 1161, 1163, 1165, 1168, 1169, 1170, 1171, 1172, 1174, 1177, 1178, 1180, 1183, 1184, 1185, 1188, 1189, 1191, 1193, 1194, 1196, 1197, 1198, 1200, 1207, 1216, 1219, 1220, 1222, 1227, 1230, 1232, 1233, 1234, 1235, 1242, 1244, 1248, 1249, 1250, 1252, 1255, 1258, 1259, 1260, 1262, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1286, 1287, 1288, 1290, 1292, 1293, 1297, 1299, 1305, 1308, 1314, 1316, 1317, 1318, 1324, 1325, 1329, 1331, 1334, 1335, 1338, 1341, 1343, 1344, 1345, 1346, 1348, 1350, 1353, 1354, 1357, 1358, 1360, 1361, 1366, 1367, 1368, 1370, 1371, 1374, 1383, 1385, 1386, 1387, 1388, 1391, 1395, 1397, 1398, 1401, 1402, 1404, 1405, 1407, 1408, 1413, 1416, 1418, 1420, 1421, 1422, 1426, 1427, 1433, 1434, 1436, 1437, 1444, 1445, 1449, 1454, 1458, 1464, 1466, 1470, 1474, 1475, 1477, 1479, 1480, 1482, 1486, 1487, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1515, 1517, 1518, 1522, 1525, 1526, 1527, 1530, 1534, 1535, 1543, 1544, 1545, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1558, 1559, 1560, 1563, 1564, 1565, 1566, 1571, 1573, 1575, 1576, 1578, 1579, 1581, 1582, 1585, 1586, 1588, 1589, 1590, 1595, 1596, 1597, 1601, 1604, 1611, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1625, 1626, 1629, 1631, 1633, 1636, 1637, 1640, 1642, 1644, 1646, 1647, 1652, 1653, 1654, 1655, 1656, 1658, 1661, 1664, 1671, 1673, 1679, 1682, 1685, 1688, 1690, 1692, 1693, 1694, 1696, 1698, 1703, 1716, 1717, 1722, 1723, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1737, 1739, 1743, 1748, 1750, 1752, 1753, 1764, 1768, 1769, 1771, 1772, 1776, 1779, 1780, 1781, 1783, 1790, 1792, 1793, 1794, 1795, 1797, 1799, 1802, 1809, 1812, 1813, 1814, 1816, 1817, 1818, 1820, 1821, 1823, 1825, 1828, 1830, 1831, 1838, 1842, 1848, 1851, 1852, 1853, 1860, 1862, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1877, 1879, 1883, 1887, 1889, 1892, 1896, 1899, 1900, 1903, 1904, 1906, 1907, 1909, 1912, 1914, 1917, 1918, 1921, 1924, 1925, 1930, 1932, 1942, 1946, 1947, 1949, 1952, 1954, 1955, 1956, 1957, 1958, 1960, 1965, 1967, 1969, 1970, 1972, 1974, 1981, 1989, 1999, 2001, 2002, 2006, 2007, 2010, 2012, 2016, 2017, 2023, 2027, 2033, 2037, 2038, 2040, 2042, 2046, 2051, 2052, 2055, 2058, 2060, 2064, 2066, 2068, 2070, 2072, 2073, 2076, 2091, 2095, 2096, 2100, 2101, 2103, 2105, 2109, 2118, 2119, 2124, 2125, 2129, 2130, 2134, 2138, 2140, 2141, 2142, 2147, 2149, 2151, 2156, 2158, 2159, 2162, 2167, 2168, 2169, 2172, 2174, 2186, 2190, 2197, 2200, 2201, 2202, 2203, 2204, 2207, 2208, 2209, 2213, 2214, 2215, 2219, 2223, 2224, 2233, 2234, 2235, 2236, 2237, 2241, 2245, 2249, 2252, 2258, 2259, 2261, 2263, 2267, 2269, 2271, 2276, 2279, 2284, 2292, 2296, 2297, 2299, 2301, 2309, 2311, 2312, 2313, 2314, 2332, 2335, 2336, 2343, 2346, 2348, 2350, 2352, 2359, 2360, 2361, 2362, 2363, 2365, 2368, 2373, 2374, 2377, 2394, 2402, 2404, 2405, 2408, 2415, 2422, 2426, 2428, 2430, 2436, 2438, 2441, 2451, 2457, 2464, 2467, 2471, 2472, 2473, 2474, 2480, 2483, 2486, 2490, 2492, 2493, 2499, 2503, 2512, 2513, 2518, 2520, 2521, 2523, 2524, 2541, 2545, 2547, 2552, 2554, 2556, 2558, 2560, 2570, 2577, 2578, 2583, 2586, 2589, 2591, 2593, 2594, 2597, 2598, 2602, 2604, 2606, 2607, 2613, 2618, 2621, 2622, 2628, 2629, 2631, 2632, 2641, 2656, 2664, 2665, 2673, 2675, 2677, 2680, 2681, 2686, 2687, 2690, 2692, 2695, 2698, 2704, 2705, 2706, 2707, 2709, 2710, 2713, 2714, 2715, 2717, 2730, 2737, 2740, 2742, 2747, 2750, 2752, 2755, 2762, 2764, 2766, 2769, 2778, 2779, 2780, 2787, 2789, 2790, 2794, 2798, 2801, 2802, 2803, 2816, 2822, 2823, 2825, 2829, 2830, 2832, 2837, 2841, 2847, 2851, 2852, 2856, 2862, 2868, 2874, 2883, 2884, 2890, 2893, 2897, 2899, 2902, 2903, 2905, 2912, 2914, 2922, 2925, 2931, 2943, 2944, 2949, 2950, 2951, 2957, 2961, 2971, 2974, 2978, 2980, 2982, 2986, 2997, 3001, 3002, 3007, 3010, 3013, 3021, 3025, 3031, 3032, 3033, 3040, 3041, 3044, 3047, 3051, 3052, 3060, 3061, 3062, 3068, 3072, 3077, 3079, 3082, 3084, 3085, 3087, 3094, 3096, 3110, 3118, 3122, 3131, 3136, 3143, 3147, 3149, 3155, 3176, 3184, 3188, 3200, 3205, 3209, 3214, 3222, 3232, 3236, 3237, 3239, 3242, 3245, 3246, 3247, 3250, 3260, 3264, 3272, 3274, 3275, 3277, 3278, 3285, 3287, 3288, 3295, 3298, 3299, 3302, 3304, 3311, 3317, 3321, 3333, 3336, 3338, 3341, 3347, 3352, 3353, 3354, 3356, 3367, 3369, 3372, 3373, 3377, 3387, 3392, 3398, 3400, 3403, 3407, 3412, 3426, 3433, 3435, 3470, 3472, 3474, 3478, 3484, 3485, 3486, 3491, 3508, 3509, 3510, 3520, 3535, 3536, 3544, 3545, 3550, 3564, 3572, 3588, 3592, 3598, 3599, 3601, 3603, 3610, 3615, 3621, 3625, 3643, 3653, 3656, 3657, 3660, 3664, 3667, 3668, 3676, 3677, 3690, 3697, 3701, 3707, 3709, 3712, 3718, 3726, 3732, 3735, 3750, 3752, 3753, 3755, 3756, 3757, 3771, 3773, 3784, 3789, 3797, 3799, 3801, 3809, 3811, 3822, 3834, 3836, 3840, 3850, 3854, 3862, 3865, 3881, 3887, 3889, 3895, 3910, 3913, 3917, 3922, 3925, 3938, 3940, 3942, 3945, 3948, 3957, 3958, 3977, 3986, 4003, 4004, 4005, 4006, 4007, 4013, 4017, 4020, 4022, 4028, 4040, 4045, 4051, 4054, 4060, 4061, 4065, 4074]

# ==================== FOR LANS ================================

# Number of apps
NUM_NAPP = 2367  # number of native apps
NUM_CAPP = 25  # number of common apps
NUM_APP = 2392  # number of all apps


# Generate enumeration type
def enum(*sequential, **named):
    enums = dict(zip(sequential, xrange(len(sequential))), **named)
    return type('Enum', (), enums)

# Number of edge types
NUM_EDGETYPE = 7

# Index of each type of edge in weights
INDEX = enum(
    'EDT_EXP',
    'EDT_IMP',
    'IDT_TAG',
    'IDT_REF',
    'SIM',
    'NAT',
    'USG')

# Weight of each type of relation in GAN
WEIGHTS = [30, 20, 15, 15, 20]
WEIGHT_GAN = reduce(lambda a, b: a + b, WEIGHTS)

# For uan creation: data from us(mongodb)
INTERVAL_US = 30 * 60  # 30min
DATE_PATTERN_US = '%Y-%m-%d %H:%M:%S'
USER_IDS_US = ['F01', 'F02', 'F03', 'F04', 'F05', 'F06', 'F07']

# For uan creation: data from datatang
INTERVAL_DT = 30 * 60  # 30min
DATE_PATTERN_DT = r'%Y/%m/%d %H:%M'
USER_IDS_DT = ['1001', '1002', '1003', '1004', '1005']

# Remove edges whose score less than 10
USG_THRESHOLD = 1

# Pickle and fot files of lans
LAN_DIR = ROOT_DIR + 'lans/'
GAN_RAW_PICKLE = LAN_DIR + 'gan_raw.pickle'
GAN_RAW_DOT = LAN_DIR + 'gan_raw.dot'
GAN_PICKLE = LAN_DIR + 'gan.pickle'
GAN_DOT = LAN_DIR + 'gan.dot'

PAN_PICKLE = LAN_DIR + 'pan_%s.pickle'
PAN_DOT = LAN_DIR + 'pan_%s.dot'
UAN_PICKLE = LAN_DIR + 'uan_%s.pickle'
UAN_DOT = LAN_DIR + 'uan_%s.dot'

# ==================== FOR TESTS ===============================

# Something about tests
TEST_DIR = ROOT_DIR + 'tests/'

# For stats: frequent pattern analysis of filters
FILTER_DIR = TEST_DIR + 'filters/'
FILTERS_MATCHED = FILTER_DIR + 'filters_matched.txt'
CODE_DICT = FILTER_DIR + 'code_dict.txt'
CODED_LIST = FILTER_DIR + 'coded_list.txt'
APP_FILTERS_SCORE = FILTER_DIR + 'app_filters_score.txt'

# For recommendation: community detection
CLUSTERS_DIR = TEST_DIR + 'clusters/'
CLUSTERS_TXT = CLUSTERS_DIR + 'clusters_%s.txt'

# ==================== THE END =================================
